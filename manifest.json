<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Juego del Ahorcado</title>
  
  <!-- Manifest -->
  <link rel="manifest" href="#manifest-json" />
  
  <style>
    body {
      font-family: Arial, sans-serif;
      background-color: #f4f4f4;
      text-align: center;
      padding: 20px;
    }

    .container {
      background: white;
      padding: 20px;
      max-width: 500px;
      margin: auto;
      border-radius: 10px;
      box-shadow: 0 0 10px rgba(0,0,0,0.1);
    }

    #canvas {
      background-color: #fff;
      border: 1px solid #ccc;
      margin-bottom: 20px;
    }

    #wordDisplay {
      font-size: 24px;
      letter-spacing: 8px;
      margin: 20px 0;
    }

    #keyboard button {
      margin: 5px;
      padding: 10px 15px;
      font-size: 16px;
      cursor: pointer;
    }

    #keyboard button:disabled {
      background-color: #ddd;
      cursor: not-allowed;
    }

    #message {
      font-size: 20px;
      font-weight: bold;
      margin-top: 15px;
    }

    button#resetBtn {
      margin-top: 15px;
      padding: 10px 20px;
      font-size: 16px;
      cursor: pointer;
    }
  </style>

</head>
<body>
  <div class="container">
    <h1>Juego del Ahorcado</h1>
    <canvas id="canvas" width="200" height="250"></canvas>
    <p id="wordDisplay"></p>
    <div id="keyboard"></div>
    <p id="message"></p>
    <button id="resetBtn" onclick="resetGame()">Reiniciar</button>
  </div>

  <script>
    // Service Worker Registration
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker
        .register('/service-worker.js')
        .then(() => {
          console.log('Service Worker registrado con éxito');
        })
        .catch((error) => {
          console.log('Error al registrar el Service Worker:', error);
        });
    }

    // Manifest (embedded)
    const manifest = {
      "name": "Juego del Ahorcado",
      "short_name": "Ahorcado",
      "description": "Juego del ahorcado interactivo donde puedes adivinar palabras",
      "start_url": "/",
      "display": "standalone",
      "background_color": "#f4f4f4",
      "theme_color": "#000000",
      "icons": [
        {
          "src": "/icons/icon-192x192.png",
          "sizes": "192x192",
          "type": "image/png"
        },
        {
          "src": "/icons/icon-512x512.png",
          "sizes": "512x512",
          "type": "image/png"
        }
      ]
    };
    // Embed Manifest as a Blob
    const blob = new Blob([JSON.stringify(manifest)], {type: 'application/json'});
    const url = URL.createObjectURL(blob);
    const link = document.querySelector('link[rel="manifest"]');
    link.href = url;

    // Juego del Ahorcado
    const palabras = ["javascript", "ahorcado", "programacion", "web", "desarrollo"];
    let palabraSecreta = "";
    let letrasAdivinadas = [];
    let errores = 0;
    const maxErrores = 6;

    const wordDisplay = document.getElementById("wordDisplay");
    const message = document.getElementById("message");
    const canvas = document.getElementById("canvas");
    const ctx = canvas.getContext("2d");

    function iniciarJuego() {
      palabraSecreta = palabras[Math.floor(Math.random() * palabras.length)];
      letrasAdivinadas = [];
      errores = 0;
      actualizarPalabra();
      message.textContent = "";
      dibujarAhorcado(errores);
      crearTeclado();
    }

    function actualizarPalabra() {
      let display = palabraSecreta
        .split("")
        .map(letra => (letrasAdivinadas.includes(letra) ? letra : "_"))
        .join(" ");
      wordDisplay.textContent = display;

      if (!display.includes("_")) {
        message.textContent = "¡Ganaste!";
        desactivarTeclado();
      }
    }

    function crearTeclado() {
      const keyboard = document.getElementById("keyboard");
      keyboard.innerHTML = "";

      for (let i = 97; i <= 122; i++) {
        const letra = String.fromCharCode(i);
        const btn = document.createElement("button");
        btn.textContent = letra;
        btn.onclick = () => manejarIntento(letra, btn);
        keyboard.appendChild(btn);
      }
    }

    function manejarIntento(letra, boton) {
      boton.disabled = true;

      if (palabraSecreta.includes(letra)) {
        letrasAdivinadas.push(letra);
        actualizarPalabra();
      } else {
        errores++;
        dibujarAhorcado(errores);

        if (errores >= maxErrores) {
          message.textContent = `¡Perdiste! La palabra era "${palabraSecreta}"`;
          desactivarTeclado();
        }
      }
    }

    function desactivarTeclado() {
      const botones = document.querySelectorAll("#keyboard button");
      botones.forEach(b => b.disabled = true);
    }

    function resetGame() {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      iniciarJuego();
    }

    function dibujarAhorcado(error) {
      ctx.lineWidth = 2;
      ctx.strokeStyle = "#000";

      // Base
      if (error > 0) {
        ctx.beginPath();
        ctx.moveTo(10, 240);
        ctx.lineTo(190, 240);
        ctx.stroke();
      }

      // Poste
      if (error > 1) {
        ctx.beginPath();
        ctx.moveTo(50, 240);
        ctx.lineTo(50, 20);
        ctx.lineTo(150, 20);
        ctx.lineTo(150, 40);
        ctx.stroke();
      }

      // Cabeza
      if (error > 2) {
        ctx.beginPath();
        ctx.arc(150, 60, 20, 0, Math.PI * 2);
        ctx.stroke();
      }

      // Cuerpo
      if (error > 3) {
        ctx.beginPath();
        ctx.moveTo(150, 80);
        ctx.lineTo(150, 140);
        ctx.stroke();
      }

      // Brazos
      if (error > 4) {
        ctx.beginPath();
        ctx.moveTo(150, 100);
        ctx.lineTo(120, 120);
        ctx.moveTo(150, 100);
        ctx.lineTo(180, 120);
        ctx.stroke();
      }

      // Piernas
      if (error > 5) {
        ctx.beginPath();
        ctx.moveTo(150, 140);
        ctx.lineTo(120, 180);
        ctx.moveTo(150, 140);
        ctx.lineTo(180, 180);
        ctx.stroke();
      }
    }

    // Iniciar juego al cargar
    window.onload = iniciarJuego;
  </script>

  <!-- Service Worker Script -->
  <script>
    if ('serviceWorker' in navigator) {
      navigator.serviceWorker.register('/service-worker.js')
        .then(function(registration) {
          console.log('Service Worker registrado con éxito:', registration);
        })
        .catch(function(error) {
          console.log('Error al registrar el Service Worker:', error);
        });
    }
  </script>
</body>
</html>
